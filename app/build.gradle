plugins {
    alias(libs.plugins.android.application)
}

import java.util.Properties

def secretFile = file("secret.properties")
def secretProps = new Properties()
if (secretFile.exists()) {
    secretProps.load(new FileInputStream(secretFile))
} else {
    println("⚠️ secret.properties not found at ${secretFile.absolutePath}")
}
def geminiKey = secretProps.getProperty("GEMINI_API_KEY", "")

android {
    namespace 'com.mellah.mediassist'
    compileSdk 35

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.mellah.mediassist"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "GEMINI_API_KEY", "\"${geminiKey}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.firebase.crashlytics.buildtools
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
    implementation("com.google.code.gson:gson:2.10.1")
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
}